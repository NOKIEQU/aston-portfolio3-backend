generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  PREMIUM
}

enum Region {
  DOLNOSLASKIE
  KUJAWSKOPOMORSKIE
  LUBELSKIE 
  LUBUSKIE 
  LODZKIE 
  MALOPOLSKIE 
  MAZOWIECKIE 
  OPOLSKIE 
  PODKARPACKIE 
  PODLASKIE 
  POMORSKIE 
  SLASKIE 
  SWIETOKRZYSKIE 
  WARMINSKOMAZURSKIE
  WIELKOPOLSKIE 
  ZACHODNIOPOMORSKIE
}

enum OfferType {
  DOM
  MIESZKANIE
  DZIALKA
  GARAZ
  POKOJ
  LOKAL
  MAGAZYN
}

enum EstateType {
  PRIMARYMARKET
  AFTERMARKET
}

enum SellType {
  RENT
  BUY
}

model User {
  id             String       @id @unique @default(uuid())
  username       String       @unique @db.Char(20)
  email          String       @unique
  phoneNumber    String       @unique @db.Char(9) // Polish number has 9 numbers without (+48)
  password       String       
  listings       Int          @default(0) 
  bids           Int          @default(0) 
  premiumBids    Int          @default(0)
  banned         Boolean      @default(false)
  activated      Boolean      @default(false)
  role           Role         @default(USER)
  refreshTokens  RefreshToken[]
  verification   Verification[]
  offers         Offers[]
  boostedOffers  BoostedOffers[]
  mainBoostedOffers MainBoostedOffers[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

// Auth

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Verification {
  id          String   @id @unique @default(uuid())
  email       String
  User        User     @relation(fields: [email], references: [email], onDelete: Cascade)
  code        Int
  expires     DateTime 
}

// Add Phone Number
// 

model Offers { 
  id            String    @id @unique @default(uuid())
  author        String
  authorName    String  
  User          User      @relation(fields: [author], references: [id], onDelete: Cascade)
  title         String    @db.Char(100)
  description   String    @db.VarChar(10000)
  price         Int
  region        Region
  type          OfferType  
  sellType      SellType 
  city          String
  isBoosted     Boolean   @default(false)
  properties    Json      
  expires       DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model BoostedOffers { 
  id            String    @id @unique @default(uuid())
  author        String
  authorName    String  
  User          User      @relation(fields: [author], references: [id], onDelete: Cascade)
  title         String    @db.Char(100) 
  description   String    @db.VarChar(10000)
  price         Int
  region        Region
  type          OfferType
  sellType      SellType    
  city          String
  properties    Json      
  expires       DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model MainBoostedOffers {
  id            String    @id @unique @default(uuid())
  author        String
  authorName    String  
  User          User      @relation(fields: [author], references: [id], onDelete: Cascade)
  title         String    @db.Char(100)
  description   String    @db.VarChar(10000)
  price         Int
  region        Region
  type          OfferType
  sellType      SellType    
  city          String
  properties    Json      
  expires       DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

